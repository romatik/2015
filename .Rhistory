library(classInt)
library(RColorBrewer)
library(stringr)
setwd("C:/Users/Misha/Dropbox/Projects/EM Internship/Quantitative team/2015")
#setwd("~/Dropbox/Projects/EM Internship/Quantitative team/2015")
dataset <- read.csv("../Media/2015/Master_tables/bigtable.csv", na.strings = c("", " ", "No answer", "N/A", "NA", "Other (please specify)"), header = TRUE)
dataset$X <- NULL
dataset$B.2.2.a.If.you.feel.comfortable.describe.any.inappropriate.conduct.or.sexual.harassment.issues.you.have.witnessed.or.have.been.the.subject.of.and.the.support.you.have.received.The.answers.to.this.question.will.not.be.shared.with.Erasmus.Mundus.course._Open.Ended.Response <- NULL
### ordered levels that were used in the survey
likert_levels <- c("Very unsatisfied", "Somewhat unsatisfied", "Somewhat satisfied", "Very satisfied")
agree_levels <- c("Disagree", "Somewhat disagree", "Somewhat agree", "Agree")
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.)
View(z)
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% unique()
View(z)
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% melt(id = "A.2.name.of.Erasmus.Mundus.master.course.") %>% unique()
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% melt(id = "A.2.name.of.Erasmus.Mundus.master.course.")
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% melt(. , "A.2.name.of.Erasmus.Mundus.master.course.")
?melt
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% melt(. , na.rm= TRUE)
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% melt(. , na.rm=TRUE, id = A.2.name.of.Erasmus.Mundus.master.course.)
z <- dataset %>% select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4) %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% melt(. , na.rm=TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.")
f <- melt(z)
f <- melt(z, id = A.2.name.of.Erasmus.Mundus.master.course.)
f <- melt(z, id = "A.2.name.of.Erasmus.Mundus.master.course.")
f <- melt(z, id = "z$A.2.name.of.Erasmus.Mundus.master.course.")
f <- melt(z, id = 1)
f <- melt(z, id = c("1"))
f <- melt(z, id = 1)
f <- melt(z, id = 1:2)
f <- melt(unname(z), id = 1)
f <- melt(unname(z), id = A.2.name.of.Erasmus.Mundus.master.course.)
f <- melt(unname(z), id = "A.2.name.of.Erasmus.Mundus.master.course.")
unname(z)
z <- university_names %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
distinct(value)
z <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
distinct(value)
View(z)
z <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
summarise(paste(unique(.), sep = ";"))
z <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
summarise(n = unique(.))
z <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
summarise(n = unique(.$value))
z <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
summarise(n = unique(.$A.2.name.of.Erasmus.Mundus.master.course.))
z$variable <- NULL
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise(function(x) paste(unique(x$value), sep = ";"))
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise(function(x) paste(x$value, sep = ";"))
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise(function(x) unique(x$value))
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(function(x) unique(x$value))
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(function(x) unique(x))
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(unique)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(unique(.))
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(paste(unique)), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(nchar), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(length()), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(length), value)
View(temp)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(length(unique())), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(length(unique)), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(unique), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(paste0(levels(as.factor))), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(function(x) x[1]), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% summarise_each(funs(paste(length(levels(as.factor))) ), value)
temp <- z %>% group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>% select(value) %>% table()
View(as.data.frame(temp))
View(z)
?cast
temp <- dcast(z, A.2.name.of.Erasmus.Mundus.master.course. ~ value)
library(reshape2)
temp <- dcast(z, A.2.name.of.Erasmus.Mundus.master.course. ~ value)
View(temp)
unique(temp[1,])
unique(temp[1,], na.rm = TRUE)
?rapply
paste(unique(temp[1,]))
paste(unique(temp[1,!is.na()]))
?unique
p <- temp[1,]
p <- p[!is.na(p)]
paste(unique(temp[1,!is.na(temp[1,])]))
paste(unique(temp[1,!is.na(temp[1,])]), sep = ";")
?paste
paste(unique(temp[1,!is.na(temp[1,])]), sep = ";" ,collapse)
paste(unique(temp[1,!is.na(temp[1,])]), collapse = "; ")
temp2 <- t(temp)
View(temp2)
?lapply
z <- sapply(temp2, function(x) paste(unique(x[!is.na(x)]), collapse = ";"))
z
View(as.data.frame(z))
z <- tapply(temp2, function(x) paste(unique(x[!is.na(x)]), collapse = ";"))
View(temp)
df_args <- c(temp, sep="")
f <- do.call(paste, df_args)
f
f <- do.call(paste(collapse = "; "), df_args)
df_args <- c(temp, collapse="; ")
f <- do.call(paste, df_args)
f
df_args <- c(temp, collapse="; ", na.rm = TRUE)
df_args <- c(temp, sep ="; ", na.rm = TRUE)
f <- do.call(paste, df_args)
f
f <- gsub(" NA;", "", f)
f
write.csv(file = "universities.csv", f)
tenormore <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course.) %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
summarise(respondents = n()) %>%
filter(respondents >= 10)
colnames(tenormore) <- c("Course", "Respondents")
### taking only those entries further for analysis
dataset <- dataset[(dataset$A.2.name.of.Erasmus.Mundus.master.course. %in% tenormore$Course),]
z <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
distinct(value)
z$value <- NULL
View(z)
z <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course., University.1, University.2, University.3, University.4)%>%
melt(na.rm = TRUE, id = "A.2.name.of.Erasmus.Mundus.master.course.") %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
distinct(value)
z$variable <- NULL
temp <- dcast(A.2.name.of.Erasmus.Mundus.master.course. ~ value.var = )
temp <- dcast(A.2.name.of.Erasmus.Mundus.master.course. ~ value)
temp <- dcast(z, A.2.name.of.Erasmus.Mundus.master.course. ~ value)
df_args <- c(temp, sep ="; ")
f <- do.call(paste, df_args)
f <- gsub(" NA;", "", f)
write.csv(file = "universities10.csv", f)
source("functions.R")
source("functions.R")
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
library(ggvis)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
overalldf <- overall %>%
select(A.7.What.is.nationality.please.choose.one.only._Response) %>%
group_by(A.7.What.is.nationality.please.choose.one.only._Response) %>%
summarise(respondents = n())
names(overalldf) <- c("Country", "respondents")
Geo <- gvisGeoChart(overalldf, colorvar = "respondents", locationvar = "Country", options = list(projection = "kavrayskiy-vii"))
?gvisGeoChart
G1a <- gvisGeoChart(Exports, locationvar=
'
Country
'
, colorvar=
'
Profit
'
)
plot(G1a)
Geo <- gvisGeoChart(overalldf, colorvar = "respondents", locationvar = "Country")
View(overalldf)
overalldf <- overalldf[complete.cases(overalldf$Country),]
Geo <- gvisGeoChart(overalldf, colorvar = "respondents", locationvar = "Country")
plot(Geo)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
Geo <- gvisGeoMap(overalldf, colorvar = "respondents", locationvar = "Country")
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
library(DT)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
DT::datatable(table(overall$A.9.Gender._Response))
gender <- table(overall$A.9.Gender._Response)
gender
as.data.frame(gender)
summary(overall$A.9.Gender._Response)
as.data.frame(summary(overall$A.9.Gender._Response))
gender <- as.data.frame(summary(overall$A.9.Gender._Response))
DT::datatable(gender)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
names(gender) <- c("Response", "Number")
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
qplot(overall$A.8.Age._Response)
library(plotly)
plotly(qplot(overall$A.8.Age._Response))
?plotly
ggplotly(qplot(overall$A.8.Age._Response))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
disability <- as.data.frame(summary(overall$A.12.Do.you.have.any.diagnosed.disability._Response))
View(disability)
View(dataset)
overall$A.1.Please.create.a.unique.identification.code.Just.type.in.birthday.in.the.format.DD.MO.YY.and.the.first.two.letters.of.first.name.followed.by.the.first.two.letters.of.first.name.and.first.two.letter.of.last.name.For.example.Maris.Miller.was.born.on.October.9.1975.So.her.code.would.be.091075MAMI._Open.Ended.Response <- NULL
year <- as.data.frame(summary(overall$A.5.When.did.you.start.EM.Course._Response))
year <- as.data.frame(table(overall$A.5.When.did.you.start.EM.Course._Response))
View(year)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
View(year)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
View(year)
rownames(year) <- NULL
View(year)
DT::datatable(year[,1:2],options = list(dom = 't', searching = FALSE,
columnDefs = list(list(width = "190px", targets = "_all")),
align = "center"
))
print(year)
row.names(year) <- NULL
print(year)
?datatable
year <- as.data.frame(summary(as.factor(overall$A.5.When.did.you.start.EM.Course._Response)))
View(year)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
programs <- as.data.frame(summary(as.factor(overall$A.2.name.of.Erasmus.Mundus.master.course.)))
View(programs)
programs <- as.data.frame(summary(as.factor(overall$A.2.name.of.Erasmus.Mundus.master.course.[overall$A.2.name.of.Erasmus.Mundus.master.course. %in% tenormore,])))
programs <- as.data.frame(summary(as.factor(overall$A.2.name.of.Erasmus.Mundus.master.course.[overall$A.2.name.of.Erasmus.Mundus.master.course. %in% tenormore])))
View(programs)
programs <- as.data.frame(table(as.factor(overall$A.2.name.of.Erasmus.Mundus.master.course.[overall$A.2.name.of.Erasmus.Mundus.master.course. %in% tenormore])))
View(programs)
View(tenormore)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
scholarship <- as.data.frame(summary(as.factor(overall$A.10.Have.you.been.awarded.an.Erasmus.Mundus.scholarship.for.master.studies._Response)))
View(scholarship)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
means_printing("B.1.1")
ggplotly(means_printing("B.1.1"))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
questionprint_grouping("B.1.1", grouping = overall$A.9.Gender._Response, grouping_levels = c("Male", "Female"))
x <- "B.1.1"
z <- question_prepare(x, dataset)
question <- z[[1]]
name_of_the_question <- z[[2]]
grouping_variable <- factor(grouping, levels = grouping_levels)
questionprint_grouping("B.1.1", grouping = dataset$A.9.Gender._Response, grouping_levels = c("Male", "Female"))
questionprint_grouping("B.1.1", overall, grouping = overall$A.9.Gender._Response, grouping_levels = c("Male", "Female"))
grouping <- overall$A.9.Gender._Response
grouping_levels <- c("Male", "Female")
grouping_variable <- factor(grouping, levels = grouping_levels)
question <- question[complete.cases(grouping_variable), ]
grouping_variable <- grouping_variable[complete.cases(grouping_variable)]
questionl <- likert(question, grouping = grouping_variable)
?likert
questionl <- likert(question, grouping = grouping_variable)
detach(reshape)
detach("reshape")
detach("package:reshape", unload = TRUE)
questionprint_grouping("B.1.1", overall, grouping = overall$A.9.Gender._Response, grouping_levels = c("Male", "Female"))
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- gsub("[^2014, 2013]", "Alumni",z)
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- gsub("[^2014, 2013]", "Alumni",z)
head(z)
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- gsub("[^2014]|[^2013]|[^2012]", "Alumni",z)
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- gsub("2004", "Alumni",z)
summary(z)
summary(as.factor(z))
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- gsub("2004|2005|2006|2007|2008", "Alumni",z)
summary(as.factor(z))
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- gsub("2004|2005|2006|2007|2008|2009|2010|2011", "Alumni",z)
z <- overall$A.5.When.did.you.start.EM.Course._Response
z <- gsub("2004|2005|2006|2007|2008|2009|2010|2011", "Alumni",z)
summary(as.factor(z))
overall$A.5.When.did.you.start.EM.Course._Response <- gsub("2004|2005|2006|2007|2008|2009|2010|2011", "Alumni", overall$A.5.When.did.you.start.EM.Course._Response)
overall$A.5.When.did.you.start.EM.Course._Response <- factor(overall$A.5.When.did.you.start.EM.Course._Response, levels = c("Alumni", "2012", "2013", "2014"))
summary(overall$A.5.When.did.you.start.EM.Course._Response)
levels <-c("Alumni", "2012", "2013", "2014")
questionprint_grouping("B.1.1", overall, grouping = overall$A.5.When.did.you.start.EM.Course._Response, grouping_levels = levels)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
questionprint_grouping("L.2.a", overall, grouping = overall$A.5.When.did.you.start.EM.Course._Response, grouping_levels = levels)
questionprint_grouping("L.3.a", overall, grouping = overall$A.5.When.did.you.start.EM.Course._Response, grouping_levels = levels)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
questionprint_grouping("B.1.1", overall, grouping = overall$A.5.When.did.you.start.EM.Course._Response, grouping_levels = levels)
overall$A.5.When.did.you.start.EM.Course._Response <- gsub("2004|2005|2006|2007|2008|2009|2010|2011", "Alumni", overall$A.5.When.did.you.start.EM.Course._Response)
overall$A.5.When.did.you.start.EM.Course._Response <- gsub("2004|2005|2006|2007|2008|2009|2010|2011", "Alumni", overall$A.5.When.did.you.start.EM.Course._Response)
levels <-c("Alumni", "2012", "2013", "2014")
overall$A.5.When.did.you.start.EM.Course._Response <- factor(overall$A.5.When.did.you.start.EM.Course._Response, levels = levels)
ggplotly(means_printing("B.1.1"))
means_printing("B.1.1")
?melt
library(reshape2)
means_printing <- function(x){
### function to print out a boxplot for any given question. Used in conjuction with means_prepare.
# getting the means table for a given question
means <- means_prepare(x)[[1]]
# melting the means table to use it in plotting
melted_means <- as.data.frame(reshape2::melt(as.matrix(means)))
#getting name of the question
name_of_the_question <- extract_name(x)
#wrap statement to have new lines after a given character
wrap_function_title <- wrap_format(80)
name_of_the_question <- wrap_function_title(name_of_the_question)
#same for dimension names
wrap_function_label <- wrap_format(40)
#plotting
p <- ggplot(melted_means, aes(y = value, x = X2)) +
ggtitle(name_of_the_question) +
geom_boxplot() +
coord_flip() +
ylab("Distribution of means") +
#http://stackoverflow.com/questions/21878974/auto-wrapping-of-labels-via-labeller-label-wrap-in-ggplot2
scale_x_discrete(labels = function(x) wrap_function_label(x))+
theme(axis.title.y=element_blank())
#saving the resulting graph
#ggsave(filename = sprintf("./Mean_plots/%s.png", x), plot = p, units = "mm", width = 250, height = (70 + length(levels(factor(melted_means$X2)))*10))
return(p)
}
ggplotly(means_printing("B.1.1"))
means <- means_prepare(x)[[1]]
# melting the means table to use it in plotting
melted_means <- as.data.frame(reshape2::melt(as.matrix(means)))
#getting name of the question
name_of_the_question <- extract_name(x)
#wrap statement to have new lines after a given character
wrap_function_title <- wrap_format(80)
name_of_the_question <- wrap_function_title(name_of_the_question)
#same for dimension names
wrap_function_label <- wrap_format(40)
#plotting
p <- ggplot(melted_means, aes(y = value, x = X2)) +
ggtitle(name_of_the_question) +
geom_boxplot() +
coord_flip() +
ylab("Distribution of means") +
#http://stackoverflow.com/questions/21878974/auto-wrapping-of-labels-via-labeller-label-wrap-in-ggplot2
scale_x_discrete(labels = function(x) wrap_function_label(x))+
theme(axis.title.y=element_blank())
p
View(melted_means)
p <- ggplot(melted_means, aes(y = value, x = Var2)) +
ggtitle(name_of_the_question) +
geom_boxplot() +
coord_flip() +
ylab("Distribution of means") +
#http://stackoverflow.com/questions/21878974/auto-wrapping-of-labels-via-labeller-label-wrap-in-ggplot2
scale_x_discrete(labels = function(x) wrap_function_label(x))+
theme(axis.title.y=element_blank())
p
means_printing <- function(x){
### function to print out a boxplot for any given question. Used in conjuction with means_prepare.
# getting the means table for a given question
means <- means_prepare(x)[[1]]
# melting the means table to use it in plotting
melted_means <- as.data.frame(reshape2::melt(as.matrix(means)))
#getting name of the question
name_of_the_question <- extract_name(x)
#wrap statement to have new lines after a given character
wrap_function_title <- wrap_format(80)
name_of_the_question <- wrap_function_title(name_of_the_question)
#same for dimension names
wrap_function_label <- wrap_format(40)
#plotting
p <- ggplot(melted_means, aes(y = value, x = Var2)) +
ggtitle(name_of_the_question) +
geom_boxplot() +
coord_flip() +
ylab("Distribution of means") +
#http://stackoverflow.com/questions/21878974/auto-wrapping-of-labels-via-labeller-label-wrap-in-ggplot2
scale_x_discrete(labels = function(x) wrap_function_label(x))+
theme(axis.title.y=element_blank())
#saving the resulting graph
#ggsave(filename = sprintf("./Mean_plots/%s.png", x), plot = p, units = "mm", width = 250, height = (70 + length(levels(factor(melted_means$X2)))*10))
return(p)
}
ggplotly(means_printing("B.1.1"))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
dataset <- read.csv("../Media/2015/Master_tables/bigtable.csv", na.strings = c("", " ", "No answer", "N/A", "NA", "Other (please specify)"), header = TRUE)
dataset$X <- NULL
dataset$B.2.2.a.If.you.feel.comfortable.describe.any.inappropriate.conduct.or.sexual.harassment.issues.you.have.witnessed.or.have.been.the.subject.of.and.the.support.you.have.received.The.answers.to.this.question.will.not.be.shared.with.Erasmus.Mundus.course._Open.Ended.Response <- NULL
### ordered levels that were used in the survey
likert_levels <- c("Very unsatisfied", "Somewhat unsatisfied", "Somewhat satisfied", "Very satisfied")
agree_levels <- c("Disagree", "Somewhat disagree", "Somewhat agree", "Agree")
### questions that need to be printed out
questions <- c('B.1.1', 'B.1.3', 'B.2.1', 'B.2.2', 'C.1', #overall program satisfaction
"L.4", "L.5", "L.6", 'L.3.a', 'L.2.a', #internship/field experience
"N.1.1", "N.1.3", "N.2.1", "N.2.2", "N.3.1", "N.4.1", #satisfaction in first university
"O.1.1", "O.1.3", "O.2.1", "O.2.2", "O.3.1", "O.4.1", #satisfaction in second university
"P.1.1", "P.1.3", "P.2.1", "P.2.2", "P.3.1", "P.4.1", #satisfaction in third university
"Q.1.1", "Q.1.3", "Q.2.1", "Q.2.2", "Q.3.1", "Q.4.1") #satisfaction in fourth university
### finding out courses with 10 or more respondents in the dataset
tenormore <- dataset %>%
select(A.2.name.of.Erasmus.Mundus.master.course.) %>%
group_by(A.2.name.of.Erasmus.Mundus.master.course.) %>%
summarise(respondents = n()) %>%
filter(respondents >= 10)
colnames(tenormore) <- c("Course", "Respondents")
### taking only those entries further for analysis
#dataset <- dataset[(dataset$A.2.name.of.Erasmus.Mundus.master.course. %in% tenormore$Course),]
overall <- select(dataset,
RespondentID_,
starts_with("A."),
starts_with("X."),
starts_with("B."),
starts_with("C."),
starts_with("L."),
starts_with("N"),
starts_with("O"),
starts_with("P"),
starts_with("Q"),
I.am.currently._Response)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
summary(overall$A.5.When.did.you.start.EM.Course._Response)
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
rmarkdown::render('./Reports/cqss2015.Rmd',
output_format = "html_document",
output_file =  paste("cqss2015.html", sep=''))
