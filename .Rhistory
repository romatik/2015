mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
?complete.cases
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
row.names(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean <- mean[!!rowSums(!is.na(mean)),] # deleting rows with all NA's in a row
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
number_of_columns <- dim(mean)[2]
mean[, 2:number_of_columns] <- mean[!!rowSums(!is.na(mean[2:number_of_columns])), 2:number_of_columns] # deleting rows with all NA's in a row
row.names(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
number_of_columns <- dim(mean)[2]
to_delete <- which(rowSums(is.na(mean[, 2:number_of_columns])) == (ncol(mean) - 1))
mean <- mean[to_delete, ] # deleting rows with all NA's in a row
row.names(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.[to_delete]
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#   number_of_columns <- dim(mean)[2]
#   to_delete <- which(rowSums(is.na(mean[, 2:number_of_columns])) == (ncol(mean) - 1))
#   mean <- mean[to_delete, ] # deleting rows with all NA's in a row
row.names(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.[to_delete]
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#   number_of_columns <- dim(mean)[2]
#   to_delete <- which(rowSums(is.na(mean[, 2:number_of_columns])) == (ncol(mean) - 1))
#   mean <- mean[to_delete, ] # deleting rows with all NA's in a row
row.names(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
row.names(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
mean <- mean[!!rowSums(!is.na(mean)),]
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
row.names(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#mean <- mean[!!rowSums(!is.na(mean)),]
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
?rownames
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
rownames(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#mean <- mean[!!rowSums(!is.na(mean)),]
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
rownames(mean) <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
mean <- mean[!!rowSums(!is.na(mean)),]
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
?row.names
for (i in seq_along(questions)){
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
vector <- !!rowSums(!is.na(mean)) #logical vector to find out rows with all NA's
mean <- mean[vector,]
rownames(mean) <- rownames_store[vector]
rownames(mean)
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(p)
}
getwd()
setwd("C:/Users/Misha/Dropbox/Projects/EM Internship/Quantitative team/2015")
?nrow
sum(vector)
for (i in seq_along(questions)){
#calculating means for the given question
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#storing the names of the courses for future use
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#logical vector to find out rows with all NA's
vector <- !!rowSums(!is.na(mean))
mean <- mean[vector,] #deleting the rows with all NA's
rownames(mean) <- rownames_store[vector] #writing down the names of the courses
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
#creating the matrix for printing it out in ggplot
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
#plotting the heatmap
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
ggsave(filename = sprintf("./Heatmaps/%s.png", questions[i]), plot = p, units = "mm", width = 180, height = (35 + sum(vector)*8))
}
for (i in seq_along(questions)){
#calculating means for the given question
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#storing the names of the courses for future use
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#logical vector to find out rows with all NA's
vector <- !!rowSums(!is.na(mean))
mean <- mean[vector,] #deleting the rows with all NA's
rownames(mean) <- rownames_store[vector] #writing down the names of the courses
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
#creating the matrix for printing it out in ggplot
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
#plotting the heatmap
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
ggsave(filename = sprintf("./Heatmaps/%s.png", questions[i]), plot = p, units = "mm", height = (35 + sum(vector)*8))
}
for (i in seq_along(questions)){
#calculating means for the given question
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#storing the names of the courses for future use
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#logical vector to find out rows with all NA's
vector <- !!rowSums(!is.na(mean))
mean <- mean[vector,] #deleting the rows with all NA's
rownames(mean) <- rownames_store[vector] #writing down the names of the courses
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
#creating the matrix for printing it out in ggplot
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
#plotting the heatmap
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
ggsave(filename = sprintf("./Heatmaps/%s.png", questions[i]), plot = p, units = "mm", width = 250, height = (35 + sum(vector)*4))
}
for (i in seq_along(questions)){
#calculating means for the given question
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#storing the names of the courses for future use
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#logical vector to find out rows with all NA's
vector <- !!rowSums(!is.na(mean))
mean <- mean[vector,] #deleting the rows with all NA's
rownames(mean) <- rownames_store[vector] #writing down the names of the courses
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function <- wrap_format(35)
colnames(mean) <- wrap_function(colnames(mean))
#creating the matrix for printing it out in ggplot
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
#plotting the heatmap
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green", limits = c(1,4)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
ggsave(filename = sprintf("./Heatmaps/%s.png", questions[i]), plot = p, units = "mm", width = 250, height = (35 + sum(vector)*4))
}
for (i in seq_along(questions)){
#calculating means for the given question
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#storing the names of the courses for future use
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#logical vector to find out rows with all NA's
vector <- !!rowSums(!is.na(mean))
mean <- mean[vector,] #deleting the rows with all NA's
rownames(mean) <- rownames_store[vector] #writing down the names of the courses
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function_x <- wrap_format(35)
colnames(mean) <- wrap_function_x(colnames(mean))
wrap_function_y <- wrap_format(50)
rownames(mean) <- wrap_function_y(rownames(mean))
#creating the matrix for printing it out in ggplot
mean_matrix <- data.matrix(mean)
mean_matrix_melted <- melt(mean_matrix)
#plotting the heatmap
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green", limits = c(1,4)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
ggsave(filename = sprintf("./Heatmaps/%s.png", questions[i]), plot = p, units = "mm", width = 250, height = (35 + sum(vector)*4))
}
?mean
means <- overall%>% select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[1]))
means <- overall%>% select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[1])) %>% group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.)
View(means)
means <- overall%>% select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[1])) %>% group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>% filter(colSums(!is.na) > 10)
means <- overall%>% select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[1])) %>% group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>% filter(colSums(!is.na(.)) > 10)
means <- overall%>% select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[1])) %>% group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>% arrange(starts_with(questions[1]))
means <- overall%>% select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[1])) %>% group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>% arrange(contains(questions[1]))
for (i in seq_along(questions)){
#calculating means for the given question
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#storing the names of the courses for future use
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#logical vector to find out rows with all NA's
vector <- !!rowSums(!is.na(mean))
mean <- mean[vector,] #deleting the rows with all NA's
rownames(mean) <- rownames_store[vector] #writing down the names of the courses
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function_x <- wrap_format(35)
colnames(mean) <- wrap_function_x(colnames(mean))
wrap_function_y <- wrap_format(50)
rownames(mean) <- wrap_function_y(rownames(mean))
#creating the matrix for printing it out in ggplot
#mean_matrix <- data.matrix(mean)
mean_matrix <- scale(data.matrix(mean))
mean_matrix_melted <- melt(mean_matrix)
#plotting the heatmap
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green", limits = c(1,4)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
ggsave(filename = sprintf("./Heatmaps_scaled/%s.png", questions[i]), plot = p, units = "mm", width = 250, height = (35 + sum(vector)*4))
}
for (i in seq_along(questions)){
#calculating means for the given question
mean <- overall %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.,
starts_with(questions[i])) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
#storing the names of the courses for future use
rownames_store <- mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.
mean$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. <- NULL
#logical vector to find out rows with all NA's
vector <- !!rowSums(!is.na(mean))
mean <- mean[vector,] #deleting the rows with all NA's
rownames(mean) <- rownames_store[vector] #writing down the names of the courses
colnames(mean) <- gsub("\\.", " ", colnames(mean)) #making names of questions readable
colnames(mean) <- gsub("(.*?)_(.*)", "\\2", colnames(mean)) #leaving just the dimension name
wrap_function_x <- wrap_format(35)
colnames(mean) <- wrap_function_x(colnames(mean))
wrap_function_y <- wrap_format(50)
rownames(mean) <- wrap_function_y(rownames(mean))
#creating the matrix for printing it out in ggplot
#mean_matrix <- data.matrix(mean)
mean_matrix <- scale(data.matrix(mean))
mean_matrix_melted <- melt(mean_matrix)
#plotting the heatmap
p <- ggplot(mean_matrix_melted, aes(x = X2, y = X1)) +
ggtitle(as.character(questions[i])) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "red", high = "green") + #, limits = c(1,4)
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x=element_blank(),
axis.title.y=element_blank())
ggsave(filename = sprintf("./Heatmaps_scaled/%s.png", questions[i]), plot = p, units = "mm", width = 250, height = (35 + sum(vector)*4))
}
