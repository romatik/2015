"Study 9",
"Study 10",
"Study 11",
"Study 12",
"Study 13"
)
) +
scale_y_continuous("Observed Correlation", breaks=c(-.6,-.4,-.2,0,.2,.4,.6,.8,1)) +
scale_colour_manual(values=cbPalette) +
geom_text(aes(y=corr+.09, size=1), label = corr)
library(ggplot2)
study <- c(1:13)
corr  <- c(.12,.54,-.52,.21,-.24,.34,.41,.58,-.03,.38,.42,.61,.90)
low   <- c(.09,.51,-.57,.19,-.26,.30,.39,.56,-.07,.35,.40,.58,.87)
high  <- c(.15,.58,-.50,.24,-.22,.37,.44,.60, .00,.41,.44,.63,.91)
group <- c("a","b", "a","a", "b","a","a","a", "b","a","a","a","a")
correlations <- data.frame(study,corr,low,high,group)
cbPalette <- c("#000000", "#DD0000")
forestplot <- ggplot(data=correlations, aes(x=study, y=corr, ymin=low, ymax=high, colour=group)) +
geom_hline(aes(yintercept=0), color="#FFFF99") +
geom_pointrange() +
coord_flip() +
geom_errorbar(aes(ymin= low, ymax= high), width=.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x  = element_text(colour="#000000"),
axis.text.y  = element_text(colour="#000000"),
legend.position = "none"
) +
scale_x_continuous("Study",breaks=c(1:13),
labels=c("Study 1",
"Study 2",
"Study 3",
"Study 4",
"Study 5",
"Study 6",
"Study 7",
"Study 8",
"Study 9",
"Study 10",
"Study 11",
"Study 12",
"Study 13"
)
) +
scale_y_continuous("Observed Correlation", breaks=c(-.6,-.4,-.2,0,.2,.4,.6,.8,1)) +
scale_colour_manual(values=cbPalette) +
geom_text(aes(y=corr+.09, size=1), label = corr)
library(ggplot2)
study <- c(1:13)
corr  <- c(.12,.54,-.52,.21,-.24,.34,.41,.58,-.03,.38,.42,.61,.90)
low   <- c(.09,.51,-.57,.19,-.26,.30,.39,.56,-.07,.35,.40,.58,.87)
high  <- c(.15,.58,-.50,.24,-.22,.37,.44,.60, .00,.41,.44,.63,.91)
group <- c("a","b", "a","a", "b","a","a","a", "b","a","a","a","a")
correlations <- data.frame(study,corr,low,high,group)
cbPalette <- c("#000000", "#DD0000")
forestplot <- ggplot(data=correlations, aes(x=study, y=corr, ymin=low, ymax=high, colour=group)) +
geom_hline(aes(yintercept=0), color="#FFFF99") +
geom_text(data=subset(your.data, group=="the.group"), aes(label=your.label.variable)) +
geom_pointrange() +
coord_flip() +
geom_errorbar(aes(ymin= low, ymax= high), width=.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x  = element_text(colour="#000000"),
axis.text.y  = element_text(colour="#000000"),
legend.position = "none"
) +
scale_x_continuous("Study",breaks=c(1:13),
labels=c("Study 1",
"Study 2",
"Study 3",
"Study 4",
"Study 5",
"Study 6",
"Study 7",
"Study 8",
"Study 9",
"Study 10",
"Study 11",
"Study 12",
"Study 13"
)
) +
scale_y_continuous("Observed Correlation", breaks=c(-.6,-.4,-.2,0,.2,.4,.6,.8,1)) +
scale_colour_manual(values=cbPalette) +
geom_text(aes(y=corr+.09, size=1), label = corr)
forestplot <- ggplot(data=correlations, aes(x=study, y=corr, ymin=low, ymax=high, colour=group)) +
geom_hline(aes(yintercept=0), color="#FFFF99") +
#geom_text(data=subset(your.data, group=="the.group"), aes(label=your.label.variable)) +
geom_pointrange() +
coord_flip() +
geom_errorbar(aes(ymin= low, ymax= high), width=.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x  = element_text(colour="#000000"),
axis.text.y  = element_text(colour="#000000"),
legend.position = "none"
) +
scale_x_continuous("Study",breaks=c(1:13),
labels=c("Study 1",
"Study 2",
"Study 3",
"Study 4",
"Study 5",
"Study 6",
"Study 7",
"Study 8",
"Study 9",
"Study 10",
"Study 11",
"Study 12",
"Study 13"
)
) +
scale_y_continuous("Observed Correlation", breaks=c(-.6,-.4,-.2,0,.2,.4,.6,.8,1)) +
scale_colour_manual(values=cbPalette) +
geom_text(aes(y=corr+.09, size=1), label = corr)
forestplot
forestplot <- ggplot(data=correlations, aes(x=study, y=corr, ymin=low, ymax=high, colour=group)) +
geom_hline(aes(yintercept=0), color="#FFFF99") +
geom_text(data=subset(correlations, group=="b"), aes(y=corr+.09, size=1, label = corr)) +
geom_pointrange() +
coord_flip() +
geom_errorbar(aes(ymin= low, ymax= high), width=.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x  = element_text(colour="#000000"),
axis.text.y  = element_text(colour="#000000"),
legend.position = "none"
) +
scale_x_continuous("Study",breaks=c(1:13),
labels=c("Study 1",
"Study 2",
"Study 3",
"Study 4",
"Study 5",
"Study 6",
"Study 7",
"Study 8",
"Study 9",
"Study 10",
"Study 11",
"Study 12",
"Study 13"
)
) +
scale_y_continuous("Observed Correlation", breaks=c(-.6,-.4,-.2,0,.2,.4,.6,.8,1)) +
scale_colour_manual(values=cbPalette) +
geom_text(aes(y=corr+.09, size=1), label = corr)
forestplot
library(openintro)
data(cars)
data(petals)
library(ggplot2)
study <- c(1:13)
corr  <- c(.12,.54,-.52,.21,-.24,.34,.41,.58,-.03,.38,.42,.61,.90)
low   <- c(.09,.51,-.57,.19,-.26,.30,.39,.56,-.07,.35,.40,.58,.87)
high  <- c(.15,.58,-.50,.24,-.22,.37,.44,.60, .00,.41,.44,.63,.91)
group <- c("a","b", "a","a", "b","a","a","a", "b","a","a","a","a")
correlations <- data.frame(study,corr,low,high,group)
cbPalette <- c("#000000", "#DD0000")
forestplot <- ggplot(data=correlations, aes(x=study, y=corr, ymin=low, ymax=high, colour=group)) +
geom_hline(aes(yintercept=0), color="#FFFF99") +
geom_text(data=subset(correlations, group=="b"), aes(y=corr+.09, size=1, label = corr)) +
geom_pointrange() +
coord_flip() +
geom_errorbar(aes(ymin= low, ymax= high), width=.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x  = element_text(colour="#000000"),
axis.text.y  = element_text(colour="#000000"),
legend.position = "none"
) +
scale_x_continuous("Study",breaks=c(1:13),
labels=c("Study 1",
"Study 2",
"Study 3",
"Study 4",
"Study 5",
"Study 6",
"Study 7",
"Study 8",
"Study 9",
"Study 10",
"Study 11",
"Study 12",
"Study 13"
)
) +
scale_y_continuous("Observed Correlation", breaks=c(-.6,-.4,-.2,0,.2,.4,.6,.8,1)) +
scale_colour_manual(values=cbPalette) +
geom_text(aes(y=corr+.09, size=1), label = corr)
forestplot()
forestplot
install.packages(c("aplpack", "caTools", "digest", "formatR", "highr", "Hmisc", "htmltools", "httr", "jsonlite", "knitr", "labeling", "manipulate", "markdown", "mime", "plotrix", "quantreg", "RColorBrewer", "Rcpp", "RCurl", "reshape2", "rgl", "rmarkdown", "SparseM", "swirl", "testthat", "UsingR"))
library(sqldf)
install.packages("sqldf")
library(sqldf)
data(titanic3, package="PASWR")
colnames(titanic3)
head(titanic3)
install.packages("PASWR")
data(titanic3, package="PASWR")
colnames(titanic3)
head(titanic3)
View(titanic3)
View(titanic3)
sqldf('select age, count(*) from titanic3 where age is not null group by age')
library(ggplot2)
DF=sqldf('select age from titanic3 where age != "NA"')
qplot(DF$age,data=DF, geom="histogram")
DF=sqldf('select count(*) total from titanic3 where age=29 group by survived')
DF2=t(DF)
colnames(DF2)=c('Died','Survived')
DF2
updateR()
?update
library(installr)
updateR()
install.packages("viridis") # dependency
devtools::install_github("ropensci/plotly")
library(MASS)
dat.tx.a <- mvrnorm(n=250, mu=c(30, 20, 28),
Sigma=matrix(c(25.0, 17.5, 12.3,
17.5, 25.0, 17.5,
12.3, 17.5, 25.0), nrow=3, byrow=TRUE))
dat.tx.b <- mvrnorm(n=250, mu=c(30, 20, 22),
Sigma=matrix(c(25.0, 17.5, 12.3,
17.5, 25.0, 17.5,
12.3, 17.5, 25.0), nrow=3, byrow=TRUE))
dat <- data.frame(rbind(dat.tx.a, dat.tx.b))
names(dat) <- c(‘measure.1’, ‘measure.2’, ‘measure.3’)
dat <- data.frame(subject.id = factor(1:500), tx = rep(c(‘A’, ‘B’), each = 250), dat)
rm(dat.tx.a, dat.tx.b)
dat <- reshape(dat, varying = c(‘measure.1’, ‘measure.2’, ‘measure.3’),
idvar = ‘subject.id’, direction = ‘long’)
names(dat) <- c(‘measure.1’, ‘measure.2’, ‘measure.3’)
names(dat) = c(‘measure.1’, ‘measure.2’, ‘measure.3’)
library(MASS)
dat.tx.a <- mvrnorm(n=250, mu=c(30, 20, 28),
Sigma=matrix(c(25.0, 17.5, 12.3,
17.5, 25.0, 17.5,
12.3, 17.5, 25.0), nrow=3, byrow=TRUE))
dat.tx.b <- mvrnorm(n=250, mu=c(30, 20, 22),
Sigma=matrix(c(25.0, 17.5, 12.3,
17.5, 25.0, 17.5,
12.3, 17.5, 25.0), nrow=3, byrow=TRUE))
dat <- data.frame(rbind(dat.tx.a, dat.tx.b))
names(dat) = c("measure.1", "measure.2", "measure.3")
dat <- data.frame(subject.id=factor(1:500), tx=rep(c("A", "B"), each=250), dat)
rm(dat.tx.a, dat.tx.b)
dat <- reshape(dat, varying=c("measure.1", "measure.2", "measure.3"),
idvar="subject.id", direction="long")
library(lmerTest)
m1 <- lmer(measure ~ time + tx + (1 | subject.id), data=dat)
summary(m1)
m2 <- lmer(measure ~ time * tx + (1 | subject.id), data=dat)
summary(m2)
m0 <- lmer(measure ~ time + (1 | subject.id), data=dat)
anova(m0, m1, m2)
library(dplyr)
library(likert)
library(scales)
library(psych)
library(reshape)
library(grid)
library(RColorBrewer)
#http://blog.revolutionanalytics.com/2012/09/how-to-use-your-favorite-fonts-in-r-charts.html
library(extrafont)
loadfonts()
Sys.setenv(R_GSCMD = "C:/Program Files/gs/gs9.16/bin/gswin64c.exe")
source("functions.R")
dataset <- read.csv("../Media/2015/Master_tables/bigtable.csv", na.strings = c("", " ", "No answer", "N/A", "NA"), header = TRUE)
dataset$X <- NULL
dataset$B.2.2.a.If.you.feel.comfortable.describe.any.inappropriate.conduct.or.sexual.harassment.issues.you.have.witnessed.or.have.been.the.subject.of.and.the.support.you.have.received.The.answers.to.this.question.will.not.be.shared.with.Erasmus.Mundus.course._Open.Ended.Response <- NULL
### ordered levels that were used in the survey
likert_levels <- c("Very unsatisfied", "Somewhat unsatisfied", "Somewhat satisfied", "Very satisfied")
agree_levels <- c("Disagree", "Somewhat disagree", "Somewhat agree", "Agree")
### questions that need to be printed out
questions <- c('B.1.1', 'B.1.3', 'B.2.1', 'B.2.2', 'C.1', #overall program satisfaction
"L.4", "L.5", "L.6", 'L.3.a', 'L.2.a', #internship/field experience
"N.1.1", "N.1.3", "N.2.1", "N.2.2", "N.3.1", "N.4.1", #satisfaction in first university
"O.1.1", "O.1.3", "O.2.1", "O.2.2", "O.3.1", "O.4.1", #satisfaction in second university
"P.1.1", "P.1.3", "P.2.1", "P.2.2", "P.3.1", "P.4.1", #satisfaction in third university
"Q.1.1", "Q.1.3", "Q.2.1", "Q.2.2", "Q.3.1", "Q.4.1") #satisfaction in fourth university
### finding out courses with 10 or more respondents in the dataset
tenormore <- dataset %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise(respondents = n()) %>%
filter(respondents > 10)
colnames(tenormore) <- c("Course", "Respondents")
dataset <- dataset[(dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. %in% tenormore$Course),]
setwd("C:/Users/Misha/Dropbox/Projects/EM Internship/Quantitative team/2015")
library(dplyr)
library(likert)
library(scales)
library(psych)
library(reshape)
library(grid)
library(RColorBrewer)
#http://blog.revolutionanalytics.com/2012/09/how-to-use-your-favorite-fonts-in-r-charts.html
library(extrafont)
loadfonts()
Sys.setenv(R_GSCMD = "C:/Program Files/gs/gs9.16/bin/gswin64c.exe")
setwd("C:/Users/Misha/Dropbox/Projects/EM Internship/Quantitative team/2015")
source("functions.R")
dataset <- read.csv("../Media/2015/Master_tables/bigtable.csv", na.strings = c("", " ", "No answer", "N/A", "NA"), header = TRUE)
dataset$X <- NULL
dataset$B.2.2.a.If.you.feel.comfortable.describe.any.inappropriate.conduct.or.sexual.harassment.issues.you.have.witnessed.or.have.been.the.subject.of.and.the.support.you.have.received.The.answers.to.this.question.will.not.be.shared.with.Erasmus.Mundus.course._Open.Ended.Response <- NULL
### ordered levels that were used in the survey
likert_levels <- c("Very unsatisfied", "Somewhat unsatisfied", "Somewhat satisfied", "Very satisfied")
agree_levels <- c("Disagree", "Somewhat disagree", "Somewhat agree", "Agree")
### questions that need to be printed out
questions <- c('B.1.1', 'B.1.3', 'B.2.1', 'B.2.2', 'C.1', #overall program satisfaction
"L.4", "L.5", "L.6", 'L.3.a', 'L.2.a', #internship/field experience
"N.1.1", "N.1.3", "N.2.1", "N.2.2", "N.3.1", "N.4.1", #satisfaction in first university
"O.1.1", "O.1.3", "O.2.1", "O.2.2", "O.3.1", "O.4.1", #satisfaction in second university
"P.1.1", "P.1.3", "P.2.1", "P.2.2", "P.3.1", "P.4.1", #satisfaction in third university
"Q.1.1", "Q.1.3", "Q.2.1", "Q.2.2", "Q.3.1", "Q.4.1") #satisfaction in fourth university
### finding out courses with 10 or more respondents in the dataset
tenormore <- dataset %>%
select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%
summarise(respondents = n()) %>%
filter(respondents > 10)
colnames(tenormore) <- c("Course", "Respondents")
dataset <- dataset[(dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. %in% tenormore$Course),]
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
source("functions.R")
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
questions
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
warnings()
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
source("functions.R")
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
comparative_df("C.1", course_dataset)
source("functions.R")
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
questions
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
for (i in seq_along(1:2)){
course_dataset <- dataset[dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. == tenormore$Course[i],]
rmarkdown::render('report_script.Rmd',  # file 2
output_format = "pdf_document",
output_file =  paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''),
output_dir = './test/reports')
#embed_fonts(paste("report_", as.character(tenormore$Course[i]), '_', Sys.Date(), ".pdf", sep=''))
}
