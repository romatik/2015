{
    "contents" : "library(dplyr)\nlibrary(likert)\nlibrary(foreign)\nlibrary(stats)\nlibrary(reshape)\nlibrary(xtable)\nlibrary(xlsx) #load the package\nlibrary(gplots)\nlibrary(ggplot2)\nlibrary(scales)\n\ndataset <- read.csv(file = \"../Dataset_2.csv\", na.strings = c(\"\", \" \", \"No answer\", \"N/A\"), header = TRUE)\ndataset2 <- read.csv(file = \"../Dataset_1_Quantitative_team.csv\", na.strings = c(\"\", \" \", \"No answer\", \"N/A\"), header = TRUE)\nz <- semi_join(dataset2, dataset, by = \"id\")\n##### data cleaning####\n#dataset with questions about specific universities\nuniversity <- select(dataset,\n            id,\n            Course.type,\n            Course.name,\n            Graduated,\n            Start.year,\n            Finish.year,\n            Nationality,\n            Other.nationality,\n            Second.nationality,\n            Age,\n            Gender,\n            starts_with(\"X1.4\"),\n            starts_with(\"X2.1\"),\n            starts_with(\"X2.2\"),\n            starts_with(\"X2.3\"),\n            starts_with(\"X2.5.1\"),\n            starts_with(\"X4.2\"),\n            starts_with(\"X5.1\"))\n\n#dataset with questions about entire course\noverall <- select(dataset,\n            id,\n            Course.type,\n            Course.name,\n            Graduated,\n            Start.year,\n            Finish.year,\n            Nationality,\n            Other.nationality,\n            Second.nationality,\n            Age,\n            Gender,\n            X2.5.2..How.could.your.orientation.and.integration.experience..either.professional.or.personal..have.been.improved.in.any.way.,\n            X3.1..I.could.approach.my.course.coordinator.with.questions.or.problems.related.to.my.studies.and.mobility.experience..,\n            X3.1..My.course.coordinator.referred.me.to.appropriate.university.administrative.resources.as.needed..,\n            X3.1..I.felt.confident.that.my.course.coordinator.would.follow.up.on.any.unresolved.administrative.issues.or.questions.after.addressing.these.with.him.her..,\n            X4.1.1..Formalized.feedback.system..All.universities.combined,\n            X4.1.2..Formalized.feedback.system..Consortium,\n            X4.3..Describe.course.feedback.channels,\n            X4.5..Procedure.for.raising.issues.with.the.entire.consortium,\n            X4.6..Consortium.implementing.recommendaions.given.by.students,\n            X4.6...Comment,\n            X4.7..Recommendation.to.improve.feedback.channels,\n            X5.2..My.lecturers.provided.me.enough.time.for.individual.consultations..,\n            X5.2..My.lecturers.were.available.by.email.and.responded.in.a.timely.manner..,\n            X5.2..My.supervisor.provided.valuable.advice.during.my.thesis.work..,\n            X5.2..Standby.professors.were.available.for.consultation.if.the.lead.supervisor.was.unavailable..,\n            X6.1..Awareness.over.te.existance.of.EMA,\n            X6.2..Awareness.over.the.possibility.of.each.course.to.elect.an.EMA.course.representative,\n            X6.3..Most.important.issue.to.be.addressed.by.course.representative,\n            X7.1..Three.most.important.aspects.of.student.experience.that.could.be.improved,\n            X7.2..Additional.comments.and.suggestions,\n            X8.1..Overall.academic.quality,\n            X8.2..Overall.balance.of.course.workload,\n            X8.3..Consistency.of.assessment,\n            X8.4..Quality.of.internship,\n            X8.5..Use.of.innovative.technologies,\n            X8.6..Understanding.the.state.of.the.art.of.your.discipline,\n            X8.7..Balance.of.academic.mobility.path.in.relation.to.academic.needs,\n            X9.1..Achievement.beyond.expectations,\n            X9.2..Provision.of.certificates..transcripts.etc,\n            X9.3..Enhancement.of.employment,\n            X9.4..Information.about.degree.and.certificates,\n            X9.5..Provision.of.soft.skills,\n            X9.6..Provision.of.monthly.allowance)\n\nNAs <- overall == c(\"organization, schedules, communication.\") #deleting wrong answers from couple of questions\noverall[NAs] <- NA\n\nadequate_levels <- c(\"Very inadequate\", \"Inadequate\", \"Adequate\", \"Good\", \"Excellent\") #creating ordered levels of Likert-scales\nagree_levels <- c(\"Strongly disagree\", \"Disagree\", \"Neutral\", \"Agree\", \"Strongly agree\")\nfeedback_levels <- c(\"No, none of the universities\", \"Somewhat (weak or unclear systems)\", \"I am not sure\", \"Some do, other do not\", \"Yes, all universities do\")\n\n\n#explicitly recoding levels for questions to follow ordered levels\noverall[,\"X3.1..I.could.approach.my.course.coordinator.with.questions.or.problems.related.to.my.studies.and.mobility.experience..\"] <- \n  factor(overall[,\"X3.1..I.could.approach.my.course.coordinator.with.questions.or.problems.related.to.my.studies.and.mobility.experience..\"], levels=agree_levels) \noverall[,\"X3.1..My.course.coordinator.referred.me.to.appropriate.university.administrative.resources.as.needed..\"] <- \n  factor(overall[,\"X3.1..My.course.coordinator.referred.me.to.appropriate.university.administrative.resources.as.needed..\"], levels=agree_levels) \noverall[,\"X3.1..I.felt.confident.that.my.course.coordinator.would.follow.up.on.any.unresolved.administrative.issues.or.questions.after.addressing.these.with.him.her..\"] <- \n  factor(overall[,\"X3.1..I.felt.confident.that.my.course.coordinator.would.follow.up.on.any.unresolved.administrative.issues.or.questions.after.addressing.these.with.him.her..\"], levels=agree_levels) \noverall[,\"X4.1.1..Formalized.feedback.system..All.universities.combined\"] <- \n  factor(overall[,\"X4.1.1..Formalized.feedback.system..All.universities.combined\"], levels=feedback_levels) \noverall[,\"X4.1.2..Formalized.feedback.system..Consortium\"] <- \n  factor(overall[,\"X4.1.2..Formalized.feedback.system..Consortium\"], levels=c(\"No\", \"I am not sure\", \"Somewhat (weak or unclear systems)\", \"Yes\")) \noverall[,\"X4.3..Describe.course.feedback.channels\"] <- \n  factor(overall[,\"X4.3..Describe.course.feedback.channels\"], levels=c(\"Very Weak\", \"Weak\", \"I am not sure\", \"Adequate\", \"Strong\", \"Very strong\")) \noverall[,\"X4.6..Consortium.implementing.recommendaions.given.by.students\"] <- \n  factor(overall[,\"X4.6..Consortium.implementing.recommendaions.given.by.students\"], levels=c(\"No\", \"Yes\")) \noverall[,\"X5.2..My.lecturers.provided.me.enough.time.for.individual.consultations..\"] <- \n  factor(overall[,\"X5.2..My.lecturers.provided.me.enough.time.for.individual.consultations..\"], levels=agree_levels) \noverall[,\"X5.2..My.lecturers.were.available.by.email.and.responded.in.a.timely.manner..\"] <- \n  factor(overall[,\"X5.2..My.lecturers.were.available.by.email.and.responded.in.a.timely.manner..\"], levels=agree_levels) \noverall[,\"X5.2..My.supervisor.provided.valuable.advice.during.my.thesis.work..\"] <- \n  factor(overall[,\"X5.2..My.supervisor.provided.valuable.advice.during.my.thesis.work..\"], levels=agree_levels) \noverall[,\"X5.2..Standby.professors.were.available.for.consultation.if.the.lead.supervisor.was.unavailable..\"] <- \n  factor(overall[,\"X5.2..Standby.professors.were.available.for.consultation.if.the.lead.supervisor.was.unavailable..\"], levels=agree_levels) \noverall[,\"X8.1..Overall.academic.quality\"] <- \n  factor(overall[,\"X8.1..Overall.academic.quality\"], levels=adequate_levels) \noverall[,\"X8.2..Overall.balance.of.course.workload\"] <- \n  factor(overall[,\"X8.2..Overall.balance.of.course.workload\"], levels=adequate_levels) \noverall[,\"X8.3..Consistency.of.assessment\"] <- \n  factor(overall[,\"X8.3..Consistency.of.assessment\"], levels=adequate_levels) \noverall[,\"X8.4..Quality.of.internship\"] <- \n  factor(overall[,\"X8.4..Quality.of.internship\"], levels=adequate_levels) \noverall[,\"X8.5..Use.of.innovative.technologies\"] <- \n  factor(overall[,\"X8.2..Overall.balance.of.course.workload\"], levels=adequate_levels) \noverall[,\"X8.5..Use.of.innovative.technologies\"] <- \n  factor(overall[,\"X8.2..Overall.balance.of.course.workload\"], levels=adequate_levels) \noverall[,\"X8.6..Understanding.the.state.of.the.art.of.your.discipline\"] <- \n  factor(overall[,\"X8.2..Overall.balance.of.course.workload\"], levels=adequate_levels) \noverall[,\"X8.6..Understanding.the.state.of.the.art.of.your.discipline\"] <- \n  factor(overall[,\"X8.2..Overall.balance.of.course.workload\"], levels=adequate_levels) \noverall[,\"X8.7..Balance.of.academic.mobility.path.in.relation.to.academic.needs\"] <- \n  factor(overall[,\"X8.7..Balance.of.academic.mobility.path.in.relation.to.academic.needs\"], levels=adequate_levels) \noverall[,\"X9.1..Achievement.beyond.expectations\"] <- \n  factor(overall[,\"X9.1..Achievement.beyond.expectations\"], levels=adequate_levels) \noverall[,\"X9.2..Provision.of.certificates..transcripts.etc\"] <- \n  factor(overall[,\"X9.2..Provision.of.certificates..transcripts.etc\"], levels=adequate_levels) \noverall[,\"X9.3..Enhancement.of.employment\"] <- \n  factor(overall[,\"X9.3..Enhancement.of.employment\"], levels=adequate_levels) \noverall[,\"X9.4..Information.about.degree.and.certificates\"] <- \n  factor(overall[,\"X9.4..Information.about.degree.and.certificates\"], levels=adequate_levels) \noverall[,\"X9.5..Provision.of.soft.skills\"] <- \n  factor(overall[,\"X9.5..Provision.of.soft.skills\"], levels=adequate_levels) \noverall[,\"X9.6..Provision.of.monthly.allowance\"] <- \n  factor(overall[,\"X9.6..Provision.of.monthly.allowance\"], levels=adequate_levels) \n\n#### splitting the data into two datasets ####\n#choosing only questions with likert scale to find out best courses\noverall_likert <- select(overall,\n              id,\n              Course.name,\n              starts_with(\"X3.1\"),\n              starts_with(\"X4.1\"),\n              starts_with(\"X4.3\"),\n              starts_with(\"X5.2\"),\n              starts_with(\"X8\"),\n              starts_with(\"X9\"))\n\n#### changing the way data looks ####\n#creating a table with number of times each level is occuring for each individual program\nmoverall <- melt(overall_likert, id = c(\"id\", \"Course.name\"), na.rm = TRUE)\nmoverall_cast <- cast(moverall, Course.name~variable+value)\n\n#### first way to order ####\n#creating a vector with number of respondents for each course\nrespondents <- as.vector(summary(overall$Course.name))\nmoverall_cast[,2:116] <- moverall_cast[,2:116]/respondents #creating table with relative numbers\n\n#reading weights from the Excel file\nweights <- read.xlsx (\"weights.xlsx\", sheetIndex = 1, header= FALSE)\n\n#multiplying by weights\nmoverall_cast[,2:116] <- sweep(moverall_cast[,2:116], MARGIN = 2, weights[,1], \"*\")\n\n#adding a column with final score (sum of all columns)\nmoverall_cast <- mutate(moverall_cast, score = rowSums(moverall_cast))\nmoverall_cast <- mutate(moverall_cast, respondents = respondents)\n\n#sorting the table to see the best courses (best at the top)\n#sorting is done based on the composite score summing all the values in the table\nsorted <- moverall_cast[order(-moverall_cast$score),] \nsorted <- select(sorted,\n            Course.name,\n            score,\n            respondents)\n\n###linear model for finding out if we have a bias in results\nmodel <- lm(score~respondents, data = moverall_cast)\n\n#can we see some bias in how scores are distributed?\nqplot(x = respondents, y = moverall_cast$score) \n\nggplot(data = moverall_cast, aes(x = respondents, y = score)) +\n  geom_point(alpha=1, color=\"#c0392b\") +\n  geom_smooth(alpha=0.25, color=\"black\", fill=\"black\") \n  #geom_abline(intercept = 5.12599, slope = 0.07046)\n\n## Calculate the tertiles of the data\ncutpoints <- quantile(sorted$respondents, seq(0, 1, length = 5), na.rm = TRUE)\n\n## Cut the data at the tertiles and create a new factor variable\nsorted$resptert <- cut(sorted$respondents, cutpoints)\nlevels(sorted$resptert)\n\n## Plot to show trends in each group with different numbers of respondents\nggplot(data = sorted, aes(x = respondents, y = score, color = resptert)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n  \n\n#### second way to find out rankings ####\n#each question (e.g. 3.1, 4.2, etc.) is ranked individually (1-80). Then these ranks are summed and divided by the number of questions.\nquestion3.1 <- select(moverall_cast,\n                      Course.name,\n                      starts_with(\"X3.1\"))\nquestion4 <- select(moverall_cast,\n                    Course.name,\n                    starts_with(\"X4\"))\nquestion5 <- select(moverall_cast,\n                    Course.name,\n                    starts_with(\"X5\"))\nquestion8 <- select(moverall_cast,\n                    Course.name,\n                    starts_with(\"X8\"))\nquestion9 <- select(moverall_cast,\n                    Course.name,\n                    starts_with(\"X9\"))\n##calculating confidence intervals for means\nintervals <- function(dataset, name, question){\n  temp <- dataset %>%\n        filter(Course.name == name) %>%\n        select(question) %>%\n        data.matrix() %>%\n        t.test(na.rm = TRUE)\n  return(c(temp$conf.int[1], temp$conf.int[2], temp$estimate))\n}\n\nz1 <- intervals(overall_likert, \"AFEPA - European Master in Agricultural, Food and Environmental Policy Analysis\", 3)\n\n##auxilary function to create ranks for each question\nranking <- function(x){\n  columns <- ncol(x)\n  x <- mutate(x, score = rowSums(x[,2:columns]))\n  x <- mutate(x, rank = as.integer(rank(-x$score, ties.method = \"first\")))\n  return(x)\n}\nquestion3.1 <- ranking(question3.1)\nquestion4 <- ranking(question4)\nquestion5 <- ranking(question5)\nquestion8 <- ranking(question8)\nquestion9 <- ranking(question9)\n\n#creating rankmatrix with results of rankings from the previous step\nrankmatrix <- cbind(as.character(question3.1$Course.name), question3.1$rank, question4$rank, question5$rank, question8$rank, question9$rank)\nrankmatrix <- as.data.frame(rankmatrix)\nrankmatrix$V2 <- as.numeric(as.character(rankmatrix$V2))\nrankmatrix$V3 <- as.numeric(as.character(rankmatrix$V3))\nrankmatrix$V4 <- as.numeric(as.character(rankmatrix$V4))\nrankmatrix$V5 <- as.numeric(as.character(rankmatrix$V5))\nrankmatrix$V6 <- as.numeric(as.character(rankmatrix$V6))\nrankmatrix$score <- rowMeans (rankmatrix[, 2:6])\n\n#creating sorted matrix with the best programs on the top\nsorted2 <- rankmatrix[order(rankmatrix$score),] \n\n#plotting the resulting scores as a variable of number of respondents in the course\nggplot(data = rankmatrix, aes(x = respondents, y = -score)) +\n  geom_point(alpha=1, color=\"#c0392b\") +\n  geom_smooth(alpha=0.25, color=\"black\", fill=\"black\")\n\n#### calculating means for every course and for every question ####\nmeans <- overall_likert %>%\n  group_by(Course.name) %>%\n  summarise_each(funs(mean(., na.rm = TRUE)), matches(\"X\"))\n\nrow.names(means) <- means$Course.name\nmeans$Course.name <- NULL\ncolnames(means) <- sub(\"......\", \"\", gsub(\"\\\\.\", \" \", colnames(means))) #making names of questions readable\nwrap_function <- wrap_format(35)\ncolnames(means) <- wrap_function(colnames(means))\n\nmeans_matrix <- data.matrix(means)\nmeans_matrix_melted <- melt(means_matrix)\n\n\n#heatmap of all the means for every course and every question\nggplot(means_matrix_melted, aes(x = X2, y = X1)) + \n  geom_tile(aes(fill = value)) + \n  scale_fill_gradient(low = \"red\", high = \"green\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) \n\n###boxplot to help see problematic areas in all the courses\npar(mar=c(25,5,1,1))\nboxplot(means[,-1], las = 2)\n\n###heatmap for scaled means for every question\nmeansscaled <- scale(means)\nmeansscaled_melted <- melt(meansscaled)\n\nggplot(meansscaled_melted, aes(x = X2, y = X1)) + \n  geom_tile(aes(fill = value)) + \n  scale_fill_gradient(low = \"red\", high = \"green\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) \n\n#creating a matrix with results printed side by side to compare the results\ncompare <- cbind(as.character(sorted$Course.name), as.character(sorted2$V1))\n\n####extra lines####\n#mquestion9 <- melt(question9, id = c(\"id\", \"Course.name\"), na.rm = TRUE) \n#question9_cast <- cast(mquestion9, Course.name ~ variable+value)\n#q9_max <- sapply(question9_cast[,2:31], max)\n\n#for creating weights.xslx file\n#weights <- names(moverall_cast)[2:116]\n#write.xlsx(x = weights, file = \"weights.xlsx\", sheetName = \"weights\", row.names = FALSE)\n\n#lquestion9 <- likert(question9, grouping = overall$Course.name)\n#summary_lquestion9 <- summary(lquestion9)\n\n#qplot(summary_lquestion9[summary_lquestion9$Item == \"X9.6..Provision.of.monthly.allowance\",]$mean) #distribution of means for 9.6 question\n\n#print.xtable(table_lquestion9, type = \"html\", file = \"table_lquestion9.html\")\n#plot(lquestion9, centered = FALSE, height = 5000)\n\n#moverall_max <- sapply(moverall_cast[,2:116], max)\n#for printing the table as an example\n\n#moverall_cast_table <- xtable(moverall_cast)\n#print.xtable(moverall_cast_table, type = \"html\", file = \"moverall_cast_table.html\")\n\n#dividing each respective column by the max value of this column to make relative measure\n#question9_cast[,2:31] <- sweep(question9_cast[,2:31], MARGIN = 2, q9_max, \"/\") #http://stackoverflow.com/questions/15137334/dividing-a-data-frame-or-matrix-by-a-vector-in-r\n#write.csv(university, file = \"University.csv\")\n#write.csv(overall, file = \"Overall.csv\")\n#heatmap.2(means_matrix, cexRow = 0.5, cexCol = 1, trace = \"none\", margins = c(20,20), srtCol = 45, Colv = FALSE, keysize = 0.5)\n",
    "created" : 1439556618416.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2713805432",
    "id" : "5E35AB14",
    "lastKnownWriteTime" : 1437815337,
    "path" : "C:/Users/Misha/Dropbox/Projects/EM Internship/Quantitative team/2014/script.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}