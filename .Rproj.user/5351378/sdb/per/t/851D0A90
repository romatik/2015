{
    "contents" : "library(dplyr)\nlibrary(likert)\nlibrary(psych)\nlibrary(scales)\n\ndataset <- read.csv(\"../Media/2015/Master_tables/bigtable.csv\", na.strings = c(\"\", \" \", \"No answer\", \"N/A\", \"NA\"), header = TRUE)\ndataset$X <- NULL\ndataset$B.2.2.Rate.the.support.received.on.the.following.issues._Inappropriate.conduct.or.sexual.harassment.issues <- NULL\ndataset$B.2.2.a.If.you.feel.comfortable.describe.any.inappropriate.conduct.or.sexual.harassment.issues.you.have.witnessed.or.have.been.the.subject.of.and.the.support.you.have.received.The.answers.to.this.question.will.not.be.shared.with.Erasmus.Mundus.course._Open.Ended.Response <- NULL\n\n### ordered likert levels that were used in the survey\nlikert_levels <- c(\"Very unsatisfied\", \"Somewhat unsatisfied\", \"Somewhat satisfied\", \"Very satisfied\")\n\n### finding out courses with 10 or more respondents in the dataset\ntenormore <- dataset %>%\n  select(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%\n  group_by(A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.) %>%\n  summarise(respondents = n()) %>%\n  filter(respondents > 10)\n  \n### taking only those entries further for analysis\ndataset <- dataset[(dataset$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response. %in% tenormore$A.2.Select.the.name.of.Erasmus.Mundus.master.course._Response.),]\n\noverall <- select(dataset,\n                  RespondentID_,\n                  starts_with(\"A.\"),\n                  starts_with(\"X.\"),\n                  starts_with(\"B.\"),\n                  starts_with(\"C.\"),\n                  starts_with(\"D.\"),\n                  starts_with(\"E.\"),\n                  I.am.currently._Response)\n\nquestionprint <- function(x){\n  question <- overall[, substr(names(overall), 1, nchar(x)) == x]\n  colnames(question) <- sub(\"......\", \"\", gsub(\"\\\\.\", \" \", colnames(question))) #making names of questions readable\n  name_of_the_question <- gsub(\"(.*)_(.*)\", \"\\\\1\", colnames(question)[1]) #storing the name of the section for title of the plot\n  colnames(question) <- gsub(\"(.*)_(.*)\", \"\\\\2\", colnames(question)) #leaving just the dimension name\n  \n  ### making sure that levels go in order they were meant to go\n  for(i in seq_along(question)) {\n    question[,i] <- factor(question[,i], levels = likert_levels)\n  }\n  \n  ### calculating Cronbach's alpha\n  question_alpha <- alpha(data.matrix(question))\n  question_alpha_head <- xtable(question_alpha$total)\n  print.xtable(question_alpha_head, type = \"html\", file = sprintf(\"./Question_statistics/%s_alpha.html\", x))\n  question_alpha_drop <- xtable(question_alpha$alpha.drop)\n  print.xtable(question_alpha_drop, type = \"html\", file = sprintf(\"./Question_statistics/%s_drop.html\", x))\n  question_alpha_stats <- xtable(question_alpha$item.stats)\n  print.xtable(question_alpha_stats, type = \"html\", file = sprintf(\"./Question_statistics/%s_stats.html\", x))\n  \n  \n  questionl <- likert(question) #creating likert-type variable for plotting\n#  wrap_function <- wrap_format(100)\n  #name_of_the_question <- wrap_function(name_of_the_question)\n  \n  ### printing out the file\n  p <- plot(questionl) + \n    ggtitle(name_of_the_question)\n  ggsave(filename = sprintf(\"./Question_statistics/%s.png\", x), plot = p)\n}",
    "created" : 1439539179670.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "346097583",
    "id" : "851D0A90",
    "lastKnownWriteTime" : 1439557119,
    "path" : "C:/Users/Misha/Dropbox/Projects/EM Internship/Quantitative team/2015/data_analysis.R",
    "project_path" : "data_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}